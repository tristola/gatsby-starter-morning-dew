{"version":3,"sources":["webpack:///./src/components/Pagination.js","webpack:///./src/templates/blog-list-template.js","webpack:///./src/components/PostsListItem.js","webpack:///./src/components/PostsList.js"],"names":["PaginationWrapper","styled","PageBtn","colors","PreviousBtn","NextBtn","Spacer","PageInfo","render","this","currentPage","nbPages","previousUrl","to","className","React","Component","BlogList","props","data","site","title","description","posts","pageContext","location","subTitle","pageQuery","Post","ReadPost","PostDate","PostHeader","Excerpt","PostTitleLink","excerpt","slug","date","language","tags","multilangPosts","useSiteMetadata","dangerouslySetInnerHTML","__html","icon","aria-label","PostsList","post","key"],"mappings":"+KAKA,IAAMA,EAAoBC,IAAH,oFAAGA,CAAH,CAAvB,oOAkBMC,EAAUD,YAAH,8EAAGA,CAAH,8NAESE,IAFT,QAGSA,IAHT,QAIFA,IAJE,aASWA,IATX,aAUAA,IAVA,QAWWA,IAXxB,SAoBMC,EAAcH,YAAH,6EAAGA,CAAH,CAAjB,+CAOMI,EAAUJ,YAAH,yEAAGA,CAAH,CAAb,aAIMK,EAASL,IAAH,0EAAGA,CAAH,CAAZ,kJAyBMM,EAAWN,IAAH,4EAAGA,CAAH,CAAd,6DAmCA,E,gLA1BEO,kBAAU,IAAD,EAC0BC,KAD1B,MACCC,EADD,cACcC,EADd,UAEDC,EAAcF,qBAAoCA,EAAxD,GAEA,OACE,yBACG,IAAAA,EACC,qBAAaG,GAAID,GADlB,iBAGC,qBAAQE,UAAU,aAGpB,0CAPF,GAWGJ,EAAA,EACC,qBAASG,GAAE,WAAYH,EAAZ,IADZ,iBAGC,qBAAQI,UAAU,W,GApBHC,IAAMC,W,uDC7EzBC,E,gLACJT,kBAAU,IAAD,EACwBC,KAAKS,MAAMC,KAAKC,KADxC,aACCC,EADD,QACQC,EADR,cAEDC,EAAQd,KAAKS,MAAMC,KAAKI,MAA9B,MACQC,EAAgBf,KAHjB,kBAKP,OACE,uBAAQgB,SAAUhB,KAAKS,MAAMO,UAC3B,sBADF,MAEE,uBAAMJ,MAAN,EAAoBK,SAAUJ,IAE9B,2BACE,uBAAWC,MAAOA,KAGpB,qBACEZ,QAASa,EADX,QAEEd,YAAac,EAAYd,gB,GAjBZK,IAAMC,WA0BhBW,GAFb,YAEO,e,2GC5BDC,EAAO3B,IAAH,kFAAGA,CAAH,CAAV,0EAKM4B,EAAW5B,YAAH,sFAAGA,CAAH,iOASHE,IATG,QAYUA,IAZV,aAcDA,IAdb,cAkBM2B,EAAW7B,IAAH,mFAAGA,CAAH,0DACHE,IADX,WAQM4B,EAAa9B,IAAH,uFAAGA,CAAH,CAAhB,mBAIM+B,EAAU/B,IAAH,+EAAGA,CAAH,CAAb,2CAKMgC,EAAgBhC,YAAH,2FAAGA,CAAH,qDACRE,IADQ,QAGaA,IAHhC,SAkCA,EA3BsB,SAAAe,GAAU,IACtBG,EAA+CH,EAD1B,MACdgB,EAAwChB,EAD1B,QACLiB,EAA+BjB,EAD1B,KACCkB,EAAyBlB,EAD1B,KACOmB,EAAmBnB,EAD1B,SACiBoB,EAASpB,EAD1B,KAErBqB,EAAmBC,cAFE,eAI7B,OACE,yBACE,yBACE,4BACE,qBAAe3B,GAAE,IAAMsB,GACpBI,GAAkB,uBAAMF,SAAUA,IAJ3C,KASE,iCACE,qBAASI,wBAAyB,CAAEC,OAAQR,MAE9C,gCACE,uBAASI,KAAT,EAAqBK,MAAM,IAC3B,yBAFF,GAGE,qBAAU9B,GAAE,IAAZ,EAA0B+B,aAAA,sBAhBhC,kB,ICvDIC,E,gLACJrC,kBAAU,IACAe,EAAUd,KADX,YAGP,OACE,kCACGc,EAAA,KAAU,SAAAuB,GACT,IAAM5B,EAAQ,CACZG,MAAOyB,mBADK,MAEZZ,QAASY,OAFG,QAGZX,KAAMW,mBAHM,KAIZV,KAAMU,mBAJM,KAKZT,SAAUS,6BALE,KAMZR,KAAMQ,yBAA8B,IAEtC,OAAO,mCAAeC,IAAK7B,EAAMiB,MAAjC,S,GAfcpB,IAAMC,WAqB9B","file":"component---src-templates-blog-list-template-js-ee2fd343a9330d83cc00.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { colors } from '../tokens'\n\nconst PaginationWrapper = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  margin-top: 4em;\n  justify-content: space-between;\n  width: 80%;\n  max-width: 770px;\n  padding: 25px 0;\n  margin: 0px auto;\n\n  @media (max-width: 780px) {\n    width: 90%;\n    padding: 25px 0;\n  }\n`\n\nconst PageBtn = styled(Link)`\n  border-radius: 3px;\n  background-color: ${colors.primary};\n  border: 1px solid ${colors.primary};\n  color: ${colors.textLightest};\n  padding: 8px 20px;\n  min-width: 130px;\n\n  &:hover {\n    background-color: ${colors.textLightest};\n    color: ${colors.primary};\n    border: 1px solid ${colors.primary};\n  }\n\n  @media (max-width: 564px) {\n    margin-top: 10px;\n    width: 100%;\n  }\n`\n\nconst PreviousBtn = styled(PageBtn)`\n  order: 1;\n  @media (max-width: 564px) {\n    order: 2;\n  }\n`\n\nconst NextBtn = styled(PageBtn)`\n  order: 3;\n`\n\nconst Spacer = styled.span`\n  display: block;\n  min-width: 130px;\n\n  &.previous {\n    order: 1;\n  }\n\n  &.next {\n    order: 3;\n  }\n\n  @media (max-width: 564px) {\n    display: none;\n\n    &.previous {\n      order: 2;\n    }\n\n    &.next {\n      order: 3;\n    }\n  }\n`\n\nconst PageInfo = styled.span`\n  order: 2;\n  padding: 1em 0;\n  @media (max-width: 564px) {\n    order: 1;\n  }\n`\n\nclass Pagination extends React.Component {\n  render() {\n    const { currentPage, nbPages } = this.props\n    const previousUrl = currentPage === 2 ? '/' : `/pages/${currentPage - 1}`\n\n    return (\n      <PaginationWrapper>\n        {currentPage !== 1 ? (\n          <PreviousBtn to={previousUrl}>â€¹ Newer posts</PreviousBtn>\n        ) : (\n          <Spacer className=\"previous\" />\n        )}\n\n        <PageInfo>\n          Page {currentPage} of {nbPages}\n        </PageInfo>\n\n        {currentPage < nbPages ? (\n          <NextBtn to={`/pages/${currentPage + 1}`}>Older posts â€º</NextBtn>\n        ) : (\n          <Spacer className=\"next\" />\n        )}\n      </PaginationWrapper>\n    )\n  }\n}\n\nexport default Pagination\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Wrapper from '../components/Wrapper'\nimport Hero from '../components/Hero'\nimport PostsList from '../components/PostsList'\nimport Pagination from '../components/Pagination'\nimport SEO from '../components/SEO'\n\nclass BlogList extends React.Component {\n  render() {\n    const { title, description } = this.props.data.site.siteMetadata\n    const posts = this.props.data.posts.edges\n    const { pageContext } = this.props\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO />\n        <Hero title={title} subTitle={description} />\n\n        <Wrapper>\n          <PostsList posts={posts} />\n        </Wrapper>\n\n        <Pagination\n          nbPages={pageContext.nbPages}\n          currentPage={pageContext.currentPage}\n        />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogList\n\nexport const pageQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    posts: allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"//content/posts//\" } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            tags\n            language\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Flag from './Flag/Flag'\nimport TagList from './TagList'\nimport useSiteMetadata from '../hooks/use-site-config'\nimport styled from 'styled-components'\nimport { colors } from '../tokens'\n\nconst Post = styled.article`\n  border-bottom: 1px solid rgba(214, 209, 230, 0.5);\n  padding-bottom: 1.25rem;\n`\n\nconst ReadPost = styled(Link)`\n  display: block;\n  font-size: 0.75rem;\n  margin-top: 1rem;\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  line-height: 2;\n  color: ${colors.primary};\n\n  &:hover {\n    background-color: ${colors.primaryAlpha};\n    border-radius: 0.25rem;\n    color: ${colors.textLightest};\n  }\n`\n\nconst PostDate = styled.time`\n  color: ${colors.textLight};\n  &:before {\n    content: 'ðŸ—“';\n    margin-right: 0.2rem;\n  }\n`\n\nconst PostHeader = styled.header`\n  padding: 1em 0;\n`\n\nconst Excerpt = styled.p`\n  line-height: 1.45;\n  padding-bottom: 0.5em;\n`\n\nconst PostTitleLink = styled(Link)`\n  color: ${colors.primary};\n  &:hover {\n    border-bottom: 1px dotted ${colors.primary};\n  }\n`\n\nconst PostsListItem = props => {\n  const { title, excerpt, slug, date, language, tags } = props\n  const { multilangPosts } = useSiteMetadata()\n\n  return (\n    <Post>\n      <PostHeader>\n        <h2>\n          <PostTitleLink to={`/${slug}`}>\n            {multilangPosts && <Flag language={language} />}\n            {title}\n          </PostTitleLink>\n        </h2>\n      </PostHeader>\n      <section>\n        <Excerpt dangerouslySetInnerHTML={{ __html: excerpt }} />\n      </section>\n      <footer>\n        <TagList tags={tags} icon={true} />\n        <PostDate>{date}</PostDate>\n        <ReadPost to={`/${slug}`} aria-label={`View ${title} article`}>\n          Read post â€º\n        </ReadPost>\n      </footer>\n    </Post>\n  )\n}\nexport default PostsListItem\n","import React, { Fragment } from 'react'\n\nimport PostsListItem from './PostsListItem'\n\nclass PostsList extends React.Component {\n  render() {\n    const { posts } = this.props\n\n    return (\n      <Fragment>\n        {posts.map(post => {\n          const props = {\n            title: post.node.frontmatter.title,\n            excerpt: post.node.excerpt,\n            slug: post.node.frontmatter.slug,\n            date: post.node.frontmatter.date,\n            language: post.node.frontmatter.language || 'fr',\n            tags: post.node.frontmatter.tags || [],\n          }\n          return <PostsListItem key={props.slug} {...props} />\n        })}\n      </Fragment>\n    )\n  }\n}\nexport default PostsList\n"],"sourceRoot":""}